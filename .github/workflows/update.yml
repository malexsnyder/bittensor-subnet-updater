name: Bittensor Subnet Updater - DISABLED

on:
  # schedule:
  #   - cron: "0 * * * *"  # DISABLED - replaced by TaoMarketCap system
  workflow_dispatch:  # Manual trigger only

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas bittensor openai faiss-cpu

      - name: Fetch latest Bittensor subnet data
        env:
          OPENAI_API_KEY: ${{ secrets.BITTENSOR_SUBNETS }}
        run: |
          python scripts/fetch_subnets_bt.py

      - name: Build subnet profiles
        run: |
          python scripts/build_profiles_local.py

      - name: Combine profiles into a single file
        run: |
          cat data/profiles/*.md > data/all_subnet_profiles.txt

      - name: Upload latest subnet data to OpenAI Vector Store
        env:
          OPENAI_API_KEY: ${{ secrets.BITTENSOR_SUBNETS }}
        run: |
          python - <<'EOF'
          import openai, os

          openai.api_key = os.environ["OPENAI_API_KEY"]

          # ✅ Replace this with your actual vector store ID
          vector_store_id = "vs_68f441099ff88191a84e2e4dadfdc104"
          profiles_path = "data/all_subnet_profiles.txt"

          if not os.path.exists(profiles_path):
              raise FileNotFoundError(f"{profiles_path} not found.")

          with open(profiles_path, "rb") as f:
              openai.VectorStoreFiles.create_and_poll(
                  vector_store_id=vector_store_id,
                  files=[f],
              )

          print("✅ Updated existing vector store with latest subnet data successfully.")
          EOF

      - name: Commit and push updates
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git pull --rebase origin main || true
          git add -A
          git commit -m "Auto-update $(date -u '+%Y-%m-%dT%H:%M:%SZ')" || echo "No changes"
          git push origin main || echo "Push failed"
